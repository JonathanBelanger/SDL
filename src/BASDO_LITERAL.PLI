/*
 *****************************************************************************
 *                                                                           *
 * Copyright 1988 Compaq Computer Corporation                                *
 *                                                                           *
 * Compaq and the Compaq logo Registered in U.S. Patent and Trademark Office.*
 *                                                                           *
 * Confidential computer software. Valid license from Compaq required for    *
 * possession, use or copying. Consistent with FAR 12.211 and 12.212,        *
 * Commercial Computer Software, Computer Software Documentation, and        *
 * Technical Data for Commercial Items are licensed to the U.S. Government   *
 * under vendors standard commercial license.                                *
 *                                                                           *
 *****************************************************************************

facility:

	SDL (Structure Definition Language)


author:
	Jeff Goodenough

*/

/*			C H A N G E    L O G

      Date	| Name	| Description
________________|_______|______________________________________________________
    22-Feb-1988	|  jg	| X3.2-0  Process a LITERAL node (created using
		|	|	  DO_ENTRY as a model)
________________|_______|______________________________________________________
     8-Dec-2000	|  LJK	| EV1-65  Change copyright notice to Compaq format.
________________|_______|______________________________________________________
*/


/****************************************************************/
/*								*/
/* DO_LITERAL processes a literal node.				*/
/*								*/
/****************************************************************/

do_literal: proc(cur_node,level);
					    /********************/
					    /*			*/
					    /* DO_LITERAL	*/
					    /*			*/
					    /********************/
%include 'sdl$library:sdlnodef.in';
%include 'sdl$library:sdltypdef.in';	/* jg */

/* declare variables */
declare
    cur_node pointer,			    /* pointer to the current node  */
    level fixed binary(31),		    /* level in the aggregate	    */
    buf char(1024) var initial(''),	    /* output buffer		    */
    based_string char(1024) var based;

DCL OUTPUT_BUF ENTRY (
	character(1024) VARYING );

DCL ADD_COMMENTS ENTRY (
	pointer,
	character(1024) VARYING );


    buf = cur_node->nod$a_typeinfo2->based_string;
    call add_comments(cur_node,buf);
    call output_buf(buf);

end do_literal;
