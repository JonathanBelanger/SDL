/*
 *****************************************************************************
 *                                                                           *
 * Copyright 1978 Compaq Computer Corporation                                *
 *                                                                           *
 * Compaq and the Compaq logo Registered in U.S. Patent and Trademark Office.*
 *                                                                           *
 * Confidential computer software. Valid license from Compaq required for    *
 * possession, use or copying. Consistent with FAR 12.211 and 12.212,        *
 * Commercial Computer Software, Computer Software Documentation, and        *
 * Technical Data for Commercial Items are licensed to the U.S. Government   *
 * under vendors standard commercial license.                                *
 *                                                                           *
 *****************************************************************************

facility:

	SDL (Structure Definition Language)


author:
	Paul A. Calato

*/

/*			C H A N G E    L O G

      Date	! Name	! Description
________________!_______!______________________________________________________
   		!  	! 					
    23-Nov-1985	|  pc	| Adding copyright header and change log.
________________!_______!______________________________________________________
     8-Dec-2000	|  LJK	| EV1-65  Change copyright notice to Compaq format.
________________|_______|______________________________________________________
*/


/****************************************************************/
/*								*/
/* DO_CHILDREN processes the children on a node.		*/
/*								*/
/****************************************************************/



%include 'sdl$library:sdlnodef.in';

do_children: proc(cur_node,level) ;
					    /********************/
					    /*			*/
					    /* DO_CHILDREN	*/
					    /*			*/
					    /********************/
/* decalre parameters and variables */
declare
    cur_node pointer,			    /* pointer to the current node  */
    level fixed binary(31),		    /* level within aggregate	    */
    global_db fixed binary(7) external,	    /* for debugging		    */
    local_db fixed binary(7) initial(1);    /* for decugging		    */

/* declare external routines */
DCL OUTPUTNODE ENTRY (
	pointer,
	pointer,
	fixed binary(31) );


	if( global_db = 1 ) then
	if ( local_db = 1 ) then
	put skip list ('in do_children at level ',level);


/*
 * Travel down the child node 
 */
	if cur_node->nod$a_child^=null() then
		call outputnode(cur_node->nod$a_child->nod$a_flink,
		cur_node->nod$a_child,level+1);


	if( global_db = 1 ) then
	if ( local_db = 1 ) then
	put skip list ('end of do_children at level ',level);


end do_children;
