/*
 *****************************************************************************
 *                                                                           *
 * Copyright 1978 Compaq Computer Corporation                                *
 *                                                                           *
 * Compaq and the Compaq logo Registered in U.S. Patent and Trademark Office.*
 *                                                                           *
 * Confidential computer software. Valid license from Compaq required for    *
 * possession, use or copying. Consistent with FAR 12.211 and 12.212,        *
 * Commercial Computer Software, Computer Software Documentation, and        *
 * Technical Data for Commercial Items are licensed to the U.S. Government   *
 * under vendors standard commercial license.                                *
 *                                                                           *
 *****************************************************************************

facility:

	SDL (Structure Definition Language)


author:
	Paul A. Calato

*/

/*			C H A N G E    L O G

      Date	! Name	! Description
________________!_______!______________________________________________________
   		!  	! 					
    23-Nov-1985	|  pc	| Adding copyright header and change log.
________________!_______!______________________________________________________
    13-May-1987	|  pc	| X3.1-0 Suppress specification of maximum string
		|	|	 length if LENGTH * was specified for the
		|	|	 parameter; added %include of sdlshr.in from
		|	|	 sdl$library to get definition of the constant
		|	|	 sdl$k_unknown_length; thereupon removed
		|	|	 duplicate declaration of TRIM function which
		|	|	 is already declared in sdl$library:sdlshr.in
________________!_______!______________________________________________________
     8-Dec-2000	|  LJK	| EV1-65  Change copyright notice to Compaq format.
________________|_______|______________________________________________________
*/



/****************************************************************/
/*								*/
/* PUT_CHAR_VAR_RECS puts out a record for each character varying */
/* that appears as a parameter. The record name is generated	*/
/* from "char_varying_n" where n is a counter.			*/
/*								*/
/****************************************************************/

put_char_var_recs: proc(entry_node);
					    /********************/
					    /*			*/
					    /* PUT_CHAR_VAR_RECS*/
					    /*			*/
					    /********************/

%include 'sdl$library:sdlshr.in';
%include 'sdl$library:sdlnodef.in';

/* declare variables */
declare
    entry_node pointer,			    /* pointer to the entry node    */
    start_node pointer,			    /* pointer the the beginign of the parameter list */
    param_node pointer,			    /* pointer to the first parameter */
    counter fixed binary(31) static initial(0);/* counter appended to generated name */

/* declare external routines */
DCL OUTPUT_BUF ENTRY (
	character(1024) VARYING );


    start_node = entry_node->nod$a_child;
    param_node = entry_node->nod$a_child->nod$a_flink;

    do while( param_node ^= start_node );
	if( param_node->nod$v_varying )
	then do;
	    counter = counter + 1;
	    call output_buf('   RECORD char_varying_' || trim(counter) );
	    call output_buf('      WORD str_len');
	    if param_node->nod$l_typeinfo = sdl$k_unknown_length then
		call output_buf('      STRING str_text');
	    else
		call output_buf('      STRING str_text = ' || trim(param_node->nod$l_typeinfo) );
	    call output_buf('   END RECORD char_varying_' || trim(counter) );
	    call output_buf('  ');
	END;

	param_node = param_node->nod$a_flink;

    END;


end put_char_var_recs;

